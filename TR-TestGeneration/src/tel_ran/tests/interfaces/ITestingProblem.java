package tel_ran.tests.interfaces;

import java.util.List;

public interface ITestingProblem {
	
	/**
	 * Main function that calls test generation and fill all data of the Testing problem.
	 * @param difficultyLevel = level of difficulty 1-3
	 */
	void generate(int difficultyLevel); 
	
	/**
	 * Return name of the task type like "Calculator" for Java or "NumEstimations" for Quantative tasks
	 * This name can be seen by users-companies
	 * @return String
	 */
	String getCategory2Name();
	
	/**
	 * Return the short question = title of question
	 * Something like "Implement the interface".
	 * You should use array in DescriptionBox to generate these text. Please keep in your class only index
	 * of this array, not the text itself
	 * @return long String
	 */
	String getDescription();
	
	/**
	 * Return the text of the question. 
	 * This is the main field for programming tasks, that contains a question, a simple of code or interface
	 * @return long String
	 */
	String getQuestionText();
	
	/**
	 * Return the type of data to create images
	 * It's used for logic tasks.
	 * It's not used in programming tasks. So it can return -1;
	 * @return
	 */
	int WhatKindOfProblem();
	
	/**
	 * Return 1 letter = correct answer
	 * It's used for questions with type of American Test
	 * It's not used for programming task and can be = null
	 * @return
	 */
	String getCorrectAnswerChar();
	
	/**
	 * Returns number of options of answers (correct and incorrect)
	 * It's used for questions with type of American Test
	 * It's not used for programming task and can be = null
	 * @return
	 */
	int getNumOfAnswers();
	
	/**
	 * Return class with View (see package tel_ran.tests.test_views) that will be used
	 * to prepare information for Data Base
	 * @return ImageView for tasks with image (attention, quantative etc)
	 * or CodeView for programming tasks
	 * @throws ClassNotFoundException 
	 * @throws IllegalAccessException 
	 * @throws InstantiationException 
	 */	
	ITaskView getView() throws ClassNotFoundException, InstantiationException, IllegalAccessException;
	
	/**
	 * Return language ("java" etc). It's used only for programming tasks
	 * @return
	 */
	String getTestLanguage();
	
	/**
	 * Return all files if the task has them (not including images for attention and other american-type-task
	 * that are generated by ImageView).
	 * It's can be used for programming tasks
	 * All  these files will be packed in ZIP (!)
	 * @return
	 */
	List<String> getFiles();

	/**
	 * Return TEMPORARY path to files if the task has them (not including images for attention and other american-type-task
	 * that are generated by ImageView).
	 * The fills will be archived with a new name. But this path is needed to get archive and delete the old place. 
	 * It's can be used for programming tasks 
	 * @return
	 */
	String getPathToFiles();
	
	/**
	 * Used only for programming tasks
	 * @return String with stub (can be null). It's used in java-tasks to create stub 
	 * with methods of the interface that should be implemented
	 */
	String getStubText();
	
}
